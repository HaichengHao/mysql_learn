--23事务的概念及特点
'''
事务，就是要完成的一件事情
做一件事通常由多个步骤组成，如果某个步骤失败了会对其余的步骤产生影响

为什么要有事务呢？
有时我们要完成一个功能，需要执行多个sql语句，如果这些sql执行到一半突然停电了，
那么就会导致这个功能只完成了一半，这种情况在很多时候是不允许出现的，比如在银行存款时，刚放进去钱
收款机把钱刚吞掉，全面停电了
'''

'''
事务的作用

例如
a用户和b用户是银行的储户，现在要a给b转账500元，那么需要做以下几件事
1 检查a的账户余额>500元
2 a账户中扣除500元
3 b账户中增加500元

如果A账户扣除了钱之后，系统出现故障，a损失了500,而b也没有得到属于他的500

以上案例中，隐藏着一个前提条件:A扣钱和B加钱，要么同时成功，要么同时失败，事务的需求就在于此

事务transaction 是指作为一个基本工作单元执行的一系列sql语句的操作，要么完全地执行，要么完全地都不执行
'''
'''事务的样本如下
1 start transaction; <--事务开启
2 select balance from checking where customer_id = 10233276;
3 update checking set balance = balance - 500 where customer_id = 1-233276;
4 update savings set balance = balance + 500 where customer_id = 10233276;
5 commit; <--事务提交

'''
'''
事务四大特性ACID
1原子性 Atomicity
一个事务必须被视为不可分割的最小单位，整个事务中的操作要么全部提交成功，要门全部失败回滚，
对于一个事务来说，不可能只执行其中的一部分操作，这就是事务的原子性

2一致性 Consistency
数据库总是从一个一致性的状态切换到另一个一致性的状态（在事务样本的例子中，一致性确保了即使在执行第三、四条
语句时系统崩溃，支付账户中也不会损失500块，因为事务最终没有被提交，所以事务中所做的修改也不会保存到数据库中）


3隔离性 Isolation

通常来说，一个事务所做的修改在最终提交之前，对其他事务是不可见的。在样本实例中，当执行完第三条语句、第四条语句还未
开始时，此时有另一个账户汇总程序开始执行，则其看到支票的余额并没有被减去500元。


4持久性 Durability

'''

